### config.env
###
### Configuration file for the UDP to HLS and HLS to UDP server
###
### This file is read into the environment by the container orchestration system.
### The scripts in scripts/ will read these environment variables
### to configure the cmdline's for each processes arguments.

###
### S3/MinIO-related environment variables:
###
MINIO_DOMAIN=localhost
MINIO_SERVER_URL=http://127.0.0.1:9000
MINIO_BROWSER_REDIRECT_URL=http://127.0.0.1:9001
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=ThisIsSecret12345.
MINIO_REGION_NAME=us-east-1
MINIO_BUCKET_NAME=hls
DEBUG=false

###
### Channel id 
###
CHANNEL_NAME=channel01

###
### UDP TO HLS settings:
###

# Network capture settings:
NETWORK_INTERFACE=net1
SOURCE_IP=227.1.1.102
SOURCE_PORT=4102

# Diskless mode
DISKLESS_MODE=true

# Segment duration in milliseconds (guestimate without accurate timing)
SEGMENT_DURATION_MS=2000

# Oldest segment age to upload in seconds
FILE_MAX_AGE_SECONDS=120

# AWS S3 URL signing duration in seconds
URL_SIGNING_SECONDS=604800

# Max diskless mode segment size in memory
MAX_SEGMENT_SIZE_BYTES=50000000

# Pcap Capture Buffer size
CAPTURE_BUFFER_SIZE=4193904

# Pcap Capture Buffer Packet Count
PCAP_PACKET_COUNT=7

# Use the decimal durations for segments that may be inaccurate
USE_ESTIMATED_DURATION=false

# Number of segments to keep in the live M3U8 playlist
M3U8_LIVE_SEGMENT_COUNT=10

###
### HLS TO UDP settings:
###

HLS_INPUT_URL=http://127.0.0.1:80/channel01.m3u8

# UDP output settings:
UDP_OUTPUT_IP=224.0.0.200
UDP_OUTPUT_PORT=10000

# Smoother latency in milliseconds
SMOOTHER_LATENCY=2000

# Polling interval for M3U8 updates in milliseconds
M3U8_UPDATE_INTERVAL_MS=100

# HLS Segment history size, this keeps the names in memory to avoid re-downloading
HLS_HISTORY_SIZE=999999

# HLS Segment queue size, this is the number of segments to keep in the queue ready for sending
SEGMENT_QUEUE_SIZE=3

# UDP Queue size, this is the number of packets to keep in the queue for sending
UDP_QUEUE_SIZE=1

# UDP Send buffer size, this is 7 * 188 + 42 (UDP header) = 1358
UDP_SEND_BUFFER=1358

# Use the smoother to send segments at a constant rate using libltntstools Rust bindings
USE_SMOOTHER=false

# Use unsigned URLs for saving CPU and when not needing to secure content
USE_UNSIGNED_URLS=false

# Output file for debugging, outputs file to local disk as a TS file
#HLS_TO_UDP_OUTPUT_FILE=hls_to_udp.ts

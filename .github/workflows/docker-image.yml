name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]    # Runs on tagged releases too
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your repo (with submodules if needed)
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 2) Build your Docker image (temporary tag)
      - name: Build Docker Image
        run: |
          # We'll just use 'latest' as the ephemeral local tag
          docker build --file Dockerfile \
                       --tag groovybits/mpegts_to_s3:localbuild .

      # 3) Log in to Docker Hub (use your DOCKER_USERNAME / DOCKER_PASSWORD secrets)
      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 4) If pushing to main, tag & push 'latest'
      - name: Tag & Push 'latest' (main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag groovybits/mpegts_to_s3:localbuild groovybits/mpegts_to_s3:latest
          docker push groovybits/mpegts_to_s3:latest

      # 5) If pushing a Git tag, push the image as that tag
      - name: Tag & Push Release from Git Tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Extract the version from the ref. (e.g., 'refs/tags/v1.2.3' -> 'v1.2.3')
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo \"Found TAG_NAME=${TAG_NAME}\"

          # Retag and push
          docker tag groovybits/mpegts_to_s3:localbuild groovybits/mpegts_to_s3:${TAG_NAME}
          docker push groovybits/mpegts_to_s3:${TAG_NAME}
